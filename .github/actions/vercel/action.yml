name: Deploy to Vercel
description: Deploy the app using Vercel CLI

inputs:
  app-directory:
    description: 'The directory of the app to be deployed'
    required: true
  vercel-org-id:
    description: 'The Vercel organization ID for the app'
    required: true
  vercel-project-id:
    description: 'The Vercel project ID for the app'
    required: true
  vercel-token:
    description: 'The Vercel authentication token'
    required: true
  vercel-environment:
    description: 'The Vercel environment to deploy to'
    required: true
    default: 'preview'

runs:
  using: composite
  steps:
    - name: Validate Vercel environment input
      shell: bash
      run: |
        if [[ "${{ inputs.vercel-environment }}" != "preview" && "${{ inputs.vercel-environment }}" != "production" ]]; then
          echo "Invalid vercel-environment value. Must be 'preview' or 'production'."
          exit 1
        fi
        
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install global dependencies
      shell: bash
      run: |
        npm install -g pnpm
        npm install -g vercel@canary

    - name: Change to app directory
      shell: bash
      run: cd ${{ inputs.app-directory }}

    - name: Install project dependencies
      shell: bash
      run: pnpm install --frozen-lockfile

    - name: Pull Vercel environment information
      shell: bash
      env: 
        VERCEL_ORG_ID: ${{ inputs.vercel-org-id }}
        VERCEL_PROJECT_ID: ${{ inputs.vercel-project-id }}
      run: vercel pull --yes --environment=${{ inputs.environment }} --token=${{ inputs.vercel-token }}

    - name: Build project artifacts
      shell: bash
      env: 
        VERCEL_ORG_ID: ${{ inputs.vercel-org-id }}
        VERCEL_PROJECT_ID: ${{ inputs.vercel-project-id }}
      run: |
        if [ "${{ inputs.vercel-environment }}" == "production" ]; then
          vercel build --prod --token=${{ inputs.vercel-token }}
        else
          vercel build --token=${{ inputs.vercel-token }}
        fi

    - name: Deploy project artifacts to Vercel
      shell: bash
      env: 
        VERCEL_ORG_ID: ${{ inputs.vercel-org-id }}
        VERCEL_PROJECT_ID: ${{ inputs.vercel-project-id }}
      run: |
        if [ "${{ inputs.vercel-environment }}" == "production" ]; then
          vercel deploy --prebuilt --prod --token=${{ inputs.vercel-token }}
        else
          vercel deploy --prebuilt --token=${{ inputs.vercel-token }}
        fi
