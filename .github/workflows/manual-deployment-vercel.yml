name: Vercel apps deployment

on:
  workflow_dispatch:
    inputs:
      app:
        description: 'App to deploy'
        type: choice
        required: true
        options:
          - 'unified'
          - 'login'
        default: 'unified'
      version:
        description: 'The branch, tag or SHA to checkout'
        required: true
        default: 'master'
      environment:
        description: 'Deployment environment'
        type: choice
        required: true
        options:
          - 'preview'
          - 'production'
        default: 'preview'

permissions:
  contents: write

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}

jobs:
  deploy:
    name: 'Deploy ${{ github.event.inputs.app }} to ${{ github.event.inputs.environment }} (${{ github.event.inputs.version }})'
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.version }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install global dependencies
        run: |
          npm install -g pnpm
          npm install -g vercel@canary

      # TODO: investigate if there is a more elegant way to set VERCEL_PROJECT_ID and --prod flag.
      - name: Set VERCEL_PROJECT_ID
        run: |
          if [ "${{ github.event.inputs.app }}" == "unified" ]; then
            echo "VERCEL_PROJECT_ID=${{ secrets.VERCEL_UNIFIED_PROJECT_ID }}" >> $GITHUB_ENV
          else
            echo "VERCEL_PROJECT_ID=${{ secrets.VERCEL_LOGIN_PROJECT_ID }}" >> $GITHUB_ENV
          fi

      - name: CD into project directory
        run: cd apps/${{ github.event.inputs.app }}

      - name: Install project dependencies
        run: pnpm install --frozen-lockfile

      - name: Pull Vercel environment information
        run: vercel pull --yes --environment=${{ github.event.inputs.environment }} --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build project artifacts
        run: |
          if [ "${{ github.event.inputs.environment }}" == "production" ]; then
            vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
          else
            vercel build --token=${{ secrets.VERCEL_TOKEN }}
          fi

      - name: Deploy project artifacts to Vercel
        run: |
          if [ "${{ github.event.inputs.environment }}" == "production" ]; then
            vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
          else
            vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
          fi

      # Add slack notification?
