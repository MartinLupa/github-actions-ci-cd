name: Staging Deployment

on:
  workflow_dispatch:
  push:
    branches: [dev]

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}

jobs:
  check-paths:
    runs-on: ubuntu-latest
    outputs:
      unified: ${{ steps.filter.outputs.unified }}
      login: ${{ steps.filter.outputs.login }}
    steps:
      - uses: actions/checkout@v4
      - name: Filter paths
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            unified:
              - added|modified|deleted: 'apps/unified/**'
            login:
              - added|modified|deleted: 'apps/login/**'

  unified-preview-deploy:
    needs: [check-paths]
    if: ${{ needs.check-paths.outputs.unified == 'true' }}
    env:
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_UNIFIED_PROJECT_ID }}
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install global dependencies
        run: |
          npm install -g pnpm
          npm install -g vercel@canary

      - name: Cd into unified project directory
        run: cd apps/unified

      - name: Install unified project dependencies
        run: pnpm install --frozen-lockfile

      - name: Pull vercel environment information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build unified project artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy unified project artifacts to vercel
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}

  login-preview-deploy:
    needs: [check-paths]
    if: ${{ needs.check-paths.outputs.login == 'true' }}
    env:
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_LOGIN_PROJECT_ID }}
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install global dependencies
        run: |
          npm install -g pnpm
          npm install -g vercel@canary

      - name: Cd into login project directory
        run: cd apps/login

      - name: Install login project dependencies
        run: pnpm install --frozen-lockfile

      - name: Pull vercel environment information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build login project artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy login project artifacts to vercel
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
